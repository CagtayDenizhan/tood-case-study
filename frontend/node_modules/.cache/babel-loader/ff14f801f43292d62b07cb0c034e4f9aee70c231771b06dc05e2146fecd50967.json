{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\todo-app\\\\frontend\\\\src\\\\components\\\\CategorySelector.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CategorySelector({\n  selectedCategories,\n  onChange\n}) {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    api.get('/categories').then(res => {\n      setCategories(res.data.data.map(cat => ({\n        value: cat.id,\n        label: cat.name\n      })));\n    }).catch(err => {\n      console.error('Kategoriler yüklenemedi:', err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    isMulti: true,\n    options: categories,\n    value: categories.filter(cat => selectedCategories.includes(cat.value)),\n    onChange: selected => onChange(selected.map(opt => opt.value)),\n    classNamePrefix: \"react-select\",\n    className: \"dark:text-gray-100\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CategorySelector, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = CategorySelector;\nvar _c;\n$RefreshReg$(_c, \"CategorySelector\");","map":{"version":3,"names":["useState","useEffect","Select","api","jsxDEV","_jsxDEV","CategorySelector","selectedCategories","onChange","_s","categories","setCategories","get","then","res","data","map","cat","value","id","label","name","catch","err","console","error","isMulti","options","filter","includes","selected","opt","classNamePrefix","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/todo-app/frontend/src/components/CategorySelector.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../services/api';\r\n\r\nexport default function CategorySelector({ selectedCategories, onChange }) {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.get('/categories')\r\n      .then((res) => {\r\n        setCategories(\r\n          res.data.data.map((cat) => ({\r\n            value: cat.id,\r\n            label: cat.name,\r\n          }))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error('Kategoriler yüklenemedi:', err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      isMulti\r\n      options={categories}\r\n      value={categories.filter((cat) => selectedCategories.includes(cat.value))}\r\n      onChange={(selected) => onChange(selected.map((opt) => opt.value))}\r\n      classNamePrefix=\"react-select\"\r\n      className=\"dark:text-gray-100\"\r\n    />\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,kBAAkB;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdE,GAAG,CAACS,GAAG,CAAC,aAAa,CAAC,CACnBC,IAAI,CAAEC,GAAG,IAAK;MACbH,aAAa,CACXG,GAAG,CAACC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;QAC1BC,KAAK,EAAED,GAAG,CAACE,EAAE;QACbC,KAAK,EAAEH,GAAG,CAACI;MACb,CAAC,CAAC,CACJ,CAAC;IACH,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAACH,MAAM;IACLwB,OAAO;IACPC,OAAO,EAAEjB,UAAW;IACpBQ,KAAK,EAAER,UAAU,CAACkB,MAAM,CAAEX,GAAG,IAAKV,kBAAkB,CAACsB,QAAQ,CAACZ,GAAG,CAACC,KAAK,CAAC,CAAE;IAC1EV,QAAQ,EAAGsB,QAAQ,IAAKtB,QAAQ,CAACsB,QAAQ,CAACd,GAAG,CAAEe,GAAG,IAAKA,GAAG,CAACb,KAAK,CAAC,CAAE;IACnEc,eAAe,EAAC,cAAc;IAC9BC,SAAS,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEN;AAAC5B,EAAA,CA5BuBH,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}